<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">C:\Users\darre\IdeaProjects\ShadowPicJmeterFunctions\ShadowpicJmeterFunctions\target\ShadowpicJmeterFunctions-1.0-SNAPSHOT.jar</stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="jp@gc - Dummy Sampler" enabled="true">
          <boolProp name="WAITING">true</boolProp>
          <boolProp name="SUCCESFULL">true</boolProp>
          <stringProp name="RESPONSE_CODE">200</stringProp>
          <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
          <stringProp name="REQUEST_DATA">{
  &quot;model&quot;: &quot;abb.ability.device&quot;, 
  &quot;typeId&quot;: &quot;abb.sst.SSTRevisionD&quot;, 
  &quot;version&quot;: &quot;1.0.0&quot;,  
  &quot;name&quot;: &quot;SST Revision D&quot;, 
  &quot;description&quot;: &quot;SmartSensorTag type definition&quot;, 
  &quot;tags&quot;: [
    &quot;SST&quot;, 
    &quot;SmartSensorTag&quot;
  ],
  &quot;unique&quot;: [
    &quot;serialNumber&quot;
  ], 
  &quot;properties&quot;: {
    &quot;nominalCurrent&quot;: {
      &quot;dataType&quot;: &quot;integer&quot;, 
      &quot;unit&quot;: &quot;A&quot;, 
      &quot;value&quot;: 10
    }, 
    &quot;nominalVoltage&quot;: {
      &quot;dataType&quot;: &quot;integer&quot;, 
      &quot;unit&quot;: &quot;V&quot;, 
      &quot;value&quot;: 230
    }, 
    &quot;serialNumber&quot;: {
      &quot;dataType&quot;: &quot;string&quot;, 
      &quot;isMandatory&quot;: true
    }
  }, 
  &quot;variables&quot;: ${__jsonDupe({&quot;brokenRotorIndex&quot;: {
      &quot;dataType&quot;: &quot;number&quot;
    }\,
    &quot;kurtosis&quot;: {
      &quot;x&quot;: {
        &quot;dataType&quot;: &quot;number&quot;\,
        &quot;unit&quot;: &quot;G&quot;
      }\,
      &quot;y&quot;: {
        &quot;dataType&quot;: &quot;number&quot;\,
        &quot;unit&quot;: &quot;G&quot;
      }\,
      &quot;z&quot;: {
        &quot;dataType&quot;: &quot;number&quot;\,
        &quot;unit&quot;: &quot;G&quot;
      }
    }\, 
    &quot;skinTemperature&quot;: {
      &quot;dataType&quot;: &quot;number&quot;\, 
      &quot;description&quot;: &quot;Skin temperature measured outside of motor.&quot;\, 
      &quot;max&quot;: 80\, 
      &quot;min&quot;: -20\, 
      &quot;unit&quot;: &quot;ยบC&quot;
    }
	},20,)},  
  &quot;attributes&quot;: {
    &quot;max&quot;: {
      &quot;appliesTo&quot;: [
        &quot;number&quot;, 
        &quot;integer&quot;
      ], 
      &quot;dataType&quot;: &quot;number&quot;
    }, 
    &quot;min&quot;: {
      &quot;appliesTo&quot;: [
        &quot;number&quot;, 
        &quot;integer&quot;
      ], 
      &quot;dataType&quot;: &quot;number&quot;
    }, 
    &quot;unit&quot;: {
      &quot;appliesTo&quot;: [
        &quot;number&quot;, 
        &quot;integer&quot;
      ], 
      &quot;dataType&quot;: &quot;string&quot;
    }
  }
}
</stringProp>
          <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
          <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
          <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
          <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          <stringProp name="URL"></stringProp>
          <stringProp name="RESULT_CLASS">org.apache.jmeter.samplers.SampleResult</stringProp>
        </kg.apc.jmeter.samplers.DummySampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
